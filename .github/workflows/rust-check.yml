name: Check

on:
  workflow_call:
    inputs:
      msrv:
        description: "The minimal supported Rust version"
        required: true
        type: string
      run_doc_check:
        description: "Whether to test the build documentation"
        required: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fmt:
    name: nightly / fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo +nightly fmt --check --all

  clippy:
    name: stable / clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy action
        uses: clechasseur/rs-clippy-check@v3
        with:
          args: --workspace --all-targets --all-features -- --deny warnings

  deny:
    name: stable / deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-deny
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny
      - name: Run cargo-deny
        run: cargo deny --workspace --all-features check

  doc:
    name: nightly / doc
    if: ${{ inputs.run_doc_check }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-docs
      - name: Run rustdoc checks
        run: cargo +nightly rustdoc --all-features -- -Zunstable-options --check --deny warnings

  msrv:
    name: ${{ inputs.msrv }} / check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.msrv }}
      - name: Run cargo check
        run: cargo check --workspace --all-targets --all-features
